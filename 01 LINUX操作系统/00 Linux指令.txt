遇事不决: --help

软件管理相关指令
    Debian平台代表作Ubuntu
        .deb:基于该平台的软件安装包
        dpkg：用来安装离线安装包，不会自动安装依赖
        apt：可以离线或在线安装软件，并自动安装依赖(常用)

    Fedora平台代表作CentOS
        .rpm:基于该平台的软件安装包
        rpm：用来安装离线安装包，不会自动安装依赖
        yum：可以离线或在线安装软件，并自动安装依赖(常用)
    
    .tgz文件是一个压缩包,相当于Windows里的zip/rar

    安装软件的三种方法
        1. 下载离线安装包——dpkg、rpm
        2. 直接在线安装——apt、yum
        3. 下载源代码，然后编译安装下载.tgz源文件，
            是一个压缩包，相当于Windows里的zip或rar

    CentOS软件安装的相关命令
        rpm：(输入rpm 提示可用命令)
            rpm -ivh <包名.rpm> ——安装 #不会自动安装依赖，一般不会成功
            rpm -e <包名> ——删除 #不会自动删除依赖，一般不会成功
            rpm -qa ——列出电脑上安装的所有包

        yum：
            yum install <包名> ——安装（可以直接从网上下载）
            yum search <包名> ——搜索软件包
            yum remove <包名> ——删除
            yum update <包名> ——更新
            yum check-update ——检查更新
            yum info <包名> ——列出详情
            yum list installed ——列出电脑上安装的软件

文件操作相关指令
    Linux里的目录结构(仅列重要的)
        根目录：/
        bin目录: 存储常用的指令（二进制可执行文件）
        etc目录: 存储配置信息
        root目录: 超级管理员的主目录。
        sbin目录: 存储超级用户/管理员级别所用的指令（系统程序）。
        usr目录: 用来存放用户安装的应用程序和用户文件

    cd命令: 用来进入指定文件夹

        cd     cd ~     cd ../
        cd -   cd /     cd <路径>
    
    pwd命令: 用来查看当前所在目录

    ls命令: 列出指定目录里的文件

        默认不显示隐藏文件

        选项(可组合如 -ahl)
            -a: 用来显示所有文件,包括隐藏的

            -h: 更好的看大小

            -l: 用来显示文件详细信息
                详细信息例如:drwxrwxr-x 2 mlfy mlfy 4096 2月   8 15:14 hello
                    第一个字符表示文件类型
                        d: 表示是一个文件夹
                        -: 表示是一个普通文件
                        L: 表示一个链接(快捷方式)

                    rwxrwxr-x
                        表示权限,九个字符,三个一组,分别表示所有者,所属组和其他的权限
                        r: 读取     w: 写入     x: 执行     -: 无权限
                        这个表示 所有者 和 所属组 有所有权限 而 其他 仅有读取和执行权限

                    2 
                        如果是一个文件夹,表示这个文件夹里有几个子文件夹
                        如果是一个文件,表示文件硬链接的个数

                    mlfy mlfy : 所有者 所属组

                    4096
                        文件夹显示的都是4096
                        文件显示的是大小
                    
                    2月   8 15:14 : 最后一次修改时间

                    hello: 文件(夹)的名字

    makdir: 用来创建文件夹
        选项
            -p: 用来创建多级目录 mkdir -p xx/cc/vv

    touch: 创建空文件

    rmdir: 移除一个空文件夹,如果不空会报错

    rm -rf: 移除文件或文件夹(能识别通配符*、?)
        选项
            -r: 递归删除
            -f: 强制删除

    cp: 用来复制一个文件(夹) cp 源文件 目标文件

    mv: 用来移动一个文件(夹)

查看文件相关指令
    cat: 正序查看所有内容
    tac: 倒序查看所有内容
    head -n: 查看前n行属性, 默认十行
    tail -n: 查看后n行数据, 默认十行
    wc: 用来统计个数
    nl: 带行号查看所有内容
    more/less: 一点点查看内容
        more/less使用说明
            显示一屏就停止  q退出查看
            enter下翻一行   空格下翻一屏
            more查看完毕自动退出,less不会按q退出
            less可以使用上下按钮上下查看,more不可
            经常结合管道使用: ls/etc | more

vim文件编辑器的使用
    安装: yum install vim

    打开: vim <文件名>

    配置: 
        /etc/vimrc: 所有用户都会获取到配置
        ~/.vimrc: 仅自己获取到配置(没有该文件可以创建)

    vim有三种模式
        命令模式: 默认进入命令模式,只能接收命令,不能输入内容
            shift+z+z: 保存并退出
            ndd: 用来删除n行数据默认1行
            u: 撤销
            ctrl+r: 反撤销
            nyy: 用来复制n行,默认一行
            p: 用来粘贴
            shift+g: 定位到最后一行
            ngg: 定位到第n行,默认第一行
            $: 定位到行尾
            0/^: 定位到行首
            k j h l 分别等效于 ↑ ↓ ← →
            nx: 删除光标右边的n个文字,默认一个
            nX: 删除光标左边的n个文字,默认一个

        插入模式: 在这个模式下才能写入内容
            i: 进入插入模式
            shift+i: 进入插入模式,并将光标移到第一个非空字符(在前边插入)
            a: 进入插入模式,并将光标移到第一个非空字符(在后边插入)
            shift+a: 进入插入模式,并将光标移到最后的非空字符的最后(在后边插入)
            s: 进入插入模式,删除光标所在位置的文字,并插入内容
            shift+s: 进入插入模式,删除光标所在行内容,并插入内容
            o: 在下一行插入内容
            shift+o:在上一行插入数据
            esc: 进入命令模式
        
        底线命令模式:
            :: 英文冒号进入底线命令模式
            w: 保存
            q: 退出
            q!: 不保存强制退出
            wq: 保存并退出
            e!: 放弃修改,回复到修改之前的状态
            w <newname>: 重命名
            set nu: 显示行号
            set nonu: 隐藏行号
            数字n: 跳转到第n行
            /[搜索的字符]: 搜索
                按n 查找下一个匹配 按N 查找上一个匹配
            ?[搜索的字符]: 搜索
                按N 查找下一个匹配 按n 查找上一个匹配
            %s/原内容/新内容/[g]: 所有行内容替换,g表示全局(默认只替换一行的第一个)
            m,ns/原内容/新内容[/g]: m到n行内容替换,g表示全局(默认只替换一行的第一个)
            
            esc: 进入命令模式

用户管理相关命令
    用户
        useradd <username>: 创建一个用户
            -m: 创建用户家目录
            -M:不创建用户家目录
            -d:指定用户家目录,一般情况下不要指定
            -s: 指定用户登录时的shell解析脚本,一般指定/bin/bash

        userdel [选项] <用户名> 删除用户
            -f: 强制删除
            -r: 删除用户的同时,删除用户的家目录等信息

        passwd 用来设置密码
            passwd <username>: 给指定用户设置密码
            passwd: 给当前用户设置密码

        su 切换用户
            su <用户名>: 切换到指定用户
            su/su -: 切换到root用户

        sudo: 使用root权限执行命令
            只有被添加到 /etc/sudoers 这个文件里的用户或组
            才能使用管理员权限

        whoami: 查看当前用户

    用户组
        当创建一个用户时,会自动创建一个和它同名的组

        groups: 查看当前用户分组
            groups <用户名>: 查看指定用户分组

        gpasswd: 将用户从组里添加或删除
            gpasswd -a <用户名> <组名>: 添加
            gpasswd -d <用户名> <组名>: 删除

    用户和组相关的文件
        /etc/passwd ==> 系统内所有用户
        /etc/shadow ==> 保存了用户的密码信息
        /etc/rtoup ==> 保存分组相关信息

指令别名
    alias : 查看别名
    alias la='ls -a' : 起别名
        如果在控制台输入,别名是临时的
    unalias la: 删除别名

Linux里的配置文件介绍
    /etc/bashrc文件: 写到这里的命令,所有用户都可以执行
    ~/.bashrc文件: 仅有自己登录才能执行
    每次打开终端都会自动执行配置文件里的代码

文件权限管理
    chmod: 用来修改权限
        o: 其他 ==> chmod o+w <文件名>
        u: 所有者   g: 所属组   a: 全部
        可以用 + - =
        可以 chmod 664 demo.txt (数字为权限值 1x 2w 4r)
        文件默认权限664  文件夹默认775(umask默认为0002的结果)

    chgrp <组名> <文件名>: 用来修改文件所属组
    chowm <用户名> <文件名>: 修改所属者

压缩解压命令
    a